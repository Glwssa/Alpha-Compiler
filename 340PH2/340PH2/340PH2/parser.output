Terminals unused in grammar

   COMMENT
   COMMENT1
   SPACE
   OTHER
   OTHER2
   OTHER3
   OTHER4


State 21 conflicts: 1 shift/reduce
State 153 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: stmts stmt
    2        | %empty

    3 stmts: stmts stmt
    4      | %empty

    5 stmt: expr SEMICOLON
    6     | ifstmt
    7     | whilestmt
    8     | forstmt
    9     | returnstmt
   10     | BREAK_ST SEMICOLON
   11     | CONTINUE_ST SEMICOLON
   12     | block
   13     | funcdef
   14     | SEMICOLON

   15 expr: assignexpr
   16     | expr PLUS_OP expr
   17     | expr MINUS_OP expr
   18     | expr MULTI_OP expr
   19     | expr DIVISION_OP expr
   20     | expr PERCENT_OP expr
   21     | expr COMP_BIGGER_OP expr
   22     | expr COMP_BIGGER_EQUAL_OP expr
   23     | expr COMP_LESS_OP expr
   24     | expr COMP_LESS_EQUAL_OP expr
   25     | expr COMP_EQUAL_OP expr
   26     | expr COMP_NOT_EQUAL_OP expr
   27     | expr AND_ST expr
   28     | expr OR_ST expr
   29     | term

   30 term: LEFT_PARENTHESIS expr RIGHT_PARENTHESIS
   31     | NOT_ST expr
   32     | INCREMENT_OP lvalue
   33     | lvalue INCREMENT_OP
   34     | DICREMENT_OP lvalue
   35     | lvalue DICREMENT_OP
   36     | MINUS_OP expr
   37     | primary

   38 assignexpr: lvalue EQUAL_OP expr

   39 primary: lvalue
   40        | call
   41        | objectdef
   42        | LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS
   43        | const

   44 lvalue: ID
   45       | LOCAL_ST ID
   46       | DOUBLE_COLON ID
   47       | member

   48 member: lvalue FULL_STOP ID
   49       | lvalue LEFT_ARRAY expr RIGHT_ARRAY
   50       | call FULL_STOP ID
   51       | call LEFT_ARRAY expr RIGHT_ARRAY

   52 call: call LEFT_PARENTHESIS elist RIGHT_PARENTHESIS
   53     | lvalue callsuffix
   54     | LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

   55 callsuffix: normcall
   56           | methodcall

   57 normcall: LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

   58 methodcall: RANGE ID LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

   59 elist: expr exprs
   60      | %empty

   61 exprs: COMMA expr exprs
   62      | %empty

   63 objectdef: LEFT_ARRAY elist RIGHT_ARRAY
   64          | LEFT_ARRAY indexed RIGHT_ARRAY

   65 indexed: indexedelem indexedelems

   66 indexedelems: COMMA indexedelem indexedelems
   67             | %empty

   68 indexedelem: LEFT_CBRACKET expr COLON expr LEFT_CBRACKET

   69 block: LEFT_CBRACKET RIGHT_CBRACKET
   70      | LEFT_CBRACKET stmts RIGHT_CBRACKET

   71 funcdef: FUNC_ST LEFT_PARENTHESIS idlist RIGHT_PARENTHESIS block
   72        | FUNC_ST ID LEFT_PARENTHESIS idlist RIGHT_PARENTHESIS block

   73 const: NUMBER
   74      | STRING
   75      | TRUE_ST
   76      | FALSE_ST
   77      | NIL_ST

   78 idlist: ID IDS
   79       | %empty

   80 IDS: COMMA ID IDS
   81    | %empty

   82 ifstmt: IF_ST LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt
   83       | IF_ST LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt ELSE_ST stmt

   84 whilestmt: WHILE_ST LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt

   85 forstmt: FOR_ST LEFT_PARENTHESIS elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTHESIS stmt

   86 returnstmt: RETURN_ST SEMICOLON
   87           | RETURN_ST expr SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
IF_ST (258) 82 83
ELSE_ST (259) 83
FOR_ST (260) 85
WHILE_ST (261) 84
AND_ST (262) 27
NOT_ST (263) 31
OR_ST (264) 28
LOCAL_ST (265) 45
CONTINUE_ST (266) 11
BREAK_ST (267) 10
TRUE_ST (268) 75
FALSE_ST (269) 76
NIL_ST (270) 77
FUNC_ST (271) 71 72
RETURN_ST (272) 86 87
PLUS_OP (273) 16
MINUS_OP (274) 17 36
EQUAL_OP (275) 38
MULTI_OP (276) 18
DIVISION_OP (277) 19
PERCENT_OP (278) 20
INCREMENT_OP (279) 32 33
DICREMENT_OP (280) 34 35
COMP_EQUAL_OP (281) 25
COMP_NOT_EQUAL_OP (282) 26
COMP_BIGGER_OP (283) 21
COMP_LESS_OP (284) 23
COMP_BIGGER_EQUAL_OP (285) 22
COMP_LESS_EQUAL_OP (286) 24
NUMBER (287) 73
STRING (288) 74
LEFT_CBRACKET (289) 68 69 70
RIGHT_CBRACKET (290) 69 70
LEFT_PARENTHESIS (291) 30 42 52 54 57 58 71 72 82 83 84 85
RIGHT_PARENTHESIS (292) 30 42 52 54 57 58 71 72 82 83 84 85
SEMICOLON (293) 5 10 11 14 85 86 87
COMMA (294) 61 66 80
COLON (295) 68
DOUBLE_COLON (296) 46
FULL_STOP (297) 48 50
RANGE (298) 58
LEFT_ARRAY (299) 49 51 63 64
RIGHT_ARRAY (300) 49 51 63 64
ID (301) 44 45 46 48 50 58 72 78 80
COMMENT (302)
COMMENT1 (303)
SPACE (304)
OTHER (305)
OTHER2 (306)
OTHER3 (307)
OTHER4 (308)
UMINUS (309)


Nonterminals, with rules where they appear

$accept (55)
    on left: 0
program (56)
    on left: 1 2, on right: 0
stmts (57)
    on left: 3 4, on right: 1 3 70
stmt (58)
    on left: 5 6 7 8 9 10 11 12 13 14, on right: 1 3 82 83 84 85
expr (59)
    on left: 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29, on right:
    5 16 17 18 19 20 21 22 23 24 25 26 27 28 30 31 36 38 49 51 59 61
    68 82 83 84 85 87
term (60)
    on left: 30 31 32 33 34 35 36 37, on right: 29
assignexpr (61)
    on left: 38, on right: 15
primary (62)
    on left: 39 40 41 42 43, on right: 37
lvalue (63)
    on left: 44 45 46 47, on right: 32 33 34 35 38 39 48 49 53
member (64)
    on left: 48 49 50 51, on right: 47
call (65)
    on left: 52 53 54, on right: 40 50 51 52
callsuffix (66)
    on left: 55 56, on right: 53
normcall (67)
    on left: 57, on right: 55
methodcall (68)
    on left: 58, on right: 56
elist (69)
    on left: 59 60, on right: 52 54 57 58 63 85
exprs (70)
    on left: 61 62, on right: 59 61
objectdef (71)
    on left: 63 64, on right: 41
indexed (72)
    on left: 65, on right: 64
indexedelems (73)
    on left: 66 67, on right: 65 66
indexedelem (74)
    on left: 68, on right: 65 66
block (75)
    on left: 69 70, on right: 12 71 72
funcdef (76)
    on left: 71 72, on right: 13 42 54
const (77)
    on left: 73 74 75 76 77, on right: 43
idlist (78)
    on left: 78 79, on right: 71 72
IDS (79)
    on left: 80 81, on right: 78 80
ifstmt (80)
    on left: 82 83, on right: 6
whilestmt (81)
    on left: 84, on right: 7
forstmt (82)
    on left: 85, on right: 8
returnstmt (83)
    on left: 86 87, on right: 9


State 0

    0 $accept: . program $end

    $end      reduce using rule 2 (program)
    $default  reduce using rule 4 (stmts)

    program  go to state 1
    stmts    go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: stmts . stmt
    3 stmts: stmts . stmt

    IF_ST             shift, and go to state 4
    FOR_ST            shift, and go to state 5
    WHILE_ST          shift, and go to state 6
    NOT_ST            shift, and go to state 7
    LOCAL_ST          shift, and go to state 8
    CONTINUE_ST       shift, and go to state 9
    BREAK_ST          shift, and go to state 10
    TRUE_ST           shift, and go to state 11
    FALSE_ST          shift, and go to state 12
    NIL_ST            shift, and go to state 13
    FUNC_ST           shift, and go to state 14
    RETURN_ST         shift, and go to state 15
    MINUS_OP          shift, and go to state 16
    INCREMENT_OP      shift, and go to state 17
    DICREMENT_OP      shift, and go to state 18
    NUMBER            shift, and go to state 19
    STRING            shift, and go to state 20
    LEFT_CBRACKET     shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    SEMICOLON         shift, and go to state 23
    DOUBLE_COLON      shift, and go to state 24
    LEFT_ARRAY        shift, and go to state 25
    ID                shift, and go to state 26

    stmt        go to state 27
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifstmt      go to state 39
    whilestmt   go to state 40
    forstmt     go to state 41
    returnstmt  go to state 42


State 3

    0 $accept: program $end .

    $default  accept


State 4

   82 ifstmt: IF_ST . LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt
   83       | IF_ST . LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt ELSE_ST stmt

    LEFT_PARENTHESIS  shift, and go to state 43


State 5

   85 forstmt: FOR_ST . LEFT_PARENTHESIS elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTHESIS stmt

    LEFT_PARENTHESIS  shift, and go to state 44


State 6

   84 whilestmt: WHILE_ST . LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt

    LEFT_PARENTHESIS  shift, and go to state 45


State 7

   31 term: NOT_ST . expr

    NOT_ST            shift, and go to state 7
    LOCAL_ST          shift, and go to state 8
    TRUE_ST           shift, and go to state 11
    FALSE_ST          shift, and go to state 12
    NIL_ST            shift, and go to state 13
    MINUS_OP          shift, and go to state 16
    INCREMENT_OP      shift, and go to state 17
    DICREMENT_OP      shift, and go to state 18
    NUMBER            shift, and go to state 19
    STRING            shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    LEFT_ARRAY        shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 46
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 8

   45 lvalue: LOCAL_ST . ID

    ID  shift, and go to state 47


State 9

   11 stmt: CONTINUE_ST . SEMICOLON

    SEMICOLON  shift, and go to state 48


State 10

   10 stmt: BREAK_ST . SEMICOLON

    SEMICOLON  shift, and go to state 49


State 11

   75 const: TRUE_ST .

    $default  reduce using rule 75 (const)


State 12

   76 const: FALSE_ST .

    $default  reduce using rule 76 (const)


State 13

   77 const: NIL_ST .

    $default  reduce using rule 77 (const)


State 14

   71 funcdef: FUNC_ST . LEFT_PARENTHESIS idlist RIGHT_PARENTHESIS block
   72        | FUNC_ST . ID LEFT_PARENTHESIS idlist RIGHT_PARENTHESIS block

    LEFT_PARENTHESIS  shift, and go to state 50
    ID                shift, and go to state 51


State 15

   86 returnstmt: RETURN_ST . SEMICOLON
   87           | RETURN_ST . expr SEMICOLON

    NOT_ST            shift, and go to state 7
    LOCAL_ST          shift, and go to state 8
    TRUE_ST           shift, and go to state 11
    FALSE_ST          shift, and go to state 12
    NIL_ST            shift, and go to state 13
    MINUS_OP          shift, and go to state 16
    INCREMENT_OP      shift, and go to state 17
    DICREMENT_OP      shift, and go to state 18
    NUMBER            shift, and go to state 19
    STRING            shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    SEMICOLON         shift, and go to state 52
    DOUBLE_COLON      shift, and go to state 24
    LEFT_ARRAY        shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 53
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 16

   36 term: MINUS_OP . expr

    NOT_ST            shift, and go to state 7
    LOCAL_ST          shift, and go to state 8
    TRUE_ST           shift, and go to state 11
    FALSE_ST          shift, and go to state 12
    NIL_ST            shift, and go to state 13
    MINUS_OP          shift, and go to state 16
    INCREMENT_OP      shift, and go to state 17
    DICREMENT_OP      shift, and go to state 18
    NUMBER            shift, and go to state 19
    STRING            shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    LEFT_ARRAY        shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 54
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 17

   32 term: INCREMENT_OP . lvalue

    LOCAL_ST          shift, and go to state 8
    LEFT_PARENTHESIS  shift, and go to state 55
    DOUBLE_COLON      shift, and go to state 24
    ID                shift, and go to state 26

    lvalue  go to state 56
    member  go to state 33
    call    go to state 57


State 18

   34 term: DICREMENT_OP . lvalue

    LOCAL_ST          shift, and go to state 8
    LEFT_PARENTHESIS  shift, and go to state 55
    DOUBLE_COLON      shift, and go to state 24
    ID                shift, and go to state 26

    lvalue  go to state 58
    member  go to state 33
    call    go to state 57


State 19

   73 const: NUMBER .

    $default  reduce using rule 73 (const)


State 20

   74 const: STRING .

    $default  reduce using rule 74 (const)


State 21

   69 block: LEFT_CBRACKET . RIGHT_CBRACKET
   70      | LEFT_CBRACKET . stmts RIGHT_CBRACKET

    RIGHT_CBRACKET  shift, and go to state 59

    RIGHT_CBRACKET  [reduce using rule 4 (stmts)]
    $default        reduce using rule 4 (stmts)

    stmts  go to state 60


State 22

   30 term: LEFT_PARENTHESIS . expr RIGHT_PARENTHESIS
   42 primary: LEFT_PARENTHESIS . funcdef RIGHT_PARENTHESIS
   54 call: LEFT_PARENTHESIS . funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    NOT_ST            shift, and go to state 7
    LOCAL_ST          shift, and go to state 8
    TRUE_ST           shift, and go to state 11
    FALSE_ST          shift, and go to state 12
    NIL_ST            shift, and go to state 13
    FUNC_ST           shift, and go to state 14
    MINUS_OP          shift, and go to state 16
    INCREMENT_OP      shift, and go to state 17
    DICREMENT_OP      shift, and go to state 18
    NUMBER            shift, and go to state 19
    STRING            shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    LEFT_ARRAY        shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 61
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    funcdef     go to state 62
    const       go to state 38


State 23

   14 stmt: SEMICOLON .

    $default  reduce using rule 14 (stmt)


State 24

   46 lvalue: DOUBLE_COLON . ID

    ID  shift, and go to state 63


State 25

   63 objectdef: LEFT_ARRAY . elist RIGHT_ARRAY
   64          | LEFT_ARRAY . indexed RIGHT_ARRAY

    NOT_ST            shift, and go to state 7
    LOCAL_ST          shift, and go to state 8
    TRUE_ST           shift, and go to state 11
    FALSE_ST          shift, and go to state 12
    NIL_ST            shift, and go to state 13
    MINUS_OP          shift, and go to state 16
    INCREMENT_OP      shift, and go to state 17
    DICREMENT_OP      shift, and go to state 18
    NUMBER            shift, and go to state 19
    STRING            shift, and go to state 20
    LEFT_CBRACKET     shift, and go to state 64
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    LEFT_ARRAY        shift, and go to state 25
    ID                shift, and go to state 26

    $default  reduce using rule 60 (elist)

    expr         go to state 65
    term         go to state 29
    assignexpr   go to state 30
    primary      go to state 31
    lvalue       go to state 32
    member       go to state 33
    call         go to state 34
    elist        go to state 66
    objectdef    go to state 35
    indexed      go to state 67
    indexedelem  go to state 68
    const        go to state 38


State 26

   44 lvalue: ID .

    $default  reduce using rule 44 (lvalue)


State 27

    1 program: stmts stmt .
    3 stmts: stmts stmt .

    $end      reduce using rule 1 (program)
    $default  reduce using rule 3 (stmts)


State 28

    5 stmt: expr . SEMICOLON
   16 expr: expr . PLUS_OP expr
   17     | expr . MINUS_OP expr
   18     | expr . MULTI_OP expr
   19     | expr . DIVISION_OP expr
   20     | expr . PERCENT_OP expr
   21     | expr . COMP_BIGGER_OP expr
   22     | expr . COMP_BIGGER_EQUAL_OP expr
   23     | expr . COMP_LESS_OP expr
   24     | expr . COMP_LESS_EQUAL_OP expr
   25     | expr . COMP_EQUAL_OP expr
   26     | expr . COMP_NOT_EQUAL_OP expr
   27     | expr . AND_ST expr
   28     | expr . OR_ST expr

    AND_ST                shift, and go to state 69
    OR_ST                 shift, and go to state 70
    PLUS_OP               shift, and go to state 71
    MINUS_OP              shift, and go to state 72
    MULTI_OP              shift, and go to state 73
    DIVISION_OP           shift, and go to state 74
    PERCENT_OP            shift, and go to state 75
    COMP_EQUAL_OP         shift, and go to state 76
    COMP_NOT_EQUAL_OP     shift, and go to state 77
    COMP_BIGGER_OP        shift, and go to state 78
    COMP_LESS_OP          shift, and go to state 79
    COMP_BIGGER_EQUAL_OP  shift, and go to state 80
    COMP_LESS_EQUAL_OP    shift, and go to state 81
    SEMICOLON             shift, and go to state 82


State 29

   29 expr: term .

    $default  reduce using rule 29 (expr)


State 30

   15 expr: assignexpr .

    $default  reduce using rule 15 (expr)


State 31

   37 term: primary .

    $default  reduce using rule 37 (term)


State 32

   33 term: lvalue . INCREMENT_OP
   35     | lvalue . DICREMENT_OP
   38 assignexpr: lvalue . EQUAL_OP expr
   39 primary: lvalue .
   48 member: lvalue . FULL_STOP ID
   49       | lvalue . LEFT_ARRAY expr RIGHT_ARRAY
   53 call: lvalue . callsuffix

    EQUAL_OP          shift, and go to state 83
    INCREMENT_OP      shift, and go to state 84
    DICREMENT_OP      shift, and go to state 85
    LEFT_PARENTHESIS  shift, and go to state 86
    FULL_STOP         shift, and go to state 87
    RANGE             shift, and go to state 88
    LEFT_ARRAY        shift, and go to state 89

    $default  reduce using rule 39 (primary)

    callsuffix  go to state 90
    normcall    go to state 91
    methodcall  go to state 92


State 33

   47 lvalue: member .

    $default  reduce using rule 47 (lvalue)


State 34

   40 primary: call .
   50 member: call . FULL_STOP ID
   51       | call . LEFT_ARRAY expr RIGHT_ARRAY
   52 call: call . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 93
    FULL_STOP         shift, and go to state 94
    LEFT_ARRAY        shift, and go to state 95

    $default  reduce using rule 40 (primary)


State 35

   41 primary: objectdef .

    $default  reduce using rule 41 (primary)


State 36

   12 stmt: block .

    $default  reduce using rule 12 (stmt)


State 37

   13 stmt: funcdef .

    $default  reduce using rule 13 (stmt)


State 38

   43 primary: const .

    $default  reduce using rule 43 (primary)


State 39

    6 stmt: ifstmt .

    $default  reduce using rule 6 (stmt)


State 40

    7 stmt: whilestmt .

    $default  reduce using rule 7 (stmt)


State 41

    8 stmt: forstmt .

    $default  reduce using rule 8 (stmt)


State 42

    9 stmt: returnstmt .

    $default  reduce using rule 9 (stmt)


State 43

   82 ifstmt: IF_ST LEFT_PARENTHESIS . expr RIGHT_PARENTHESIS stmt
   83       | IF_ST LEFT_PARENTHESIS . expr RIGHT_PARENTHESIS stmt ELSE_ST stmt

    NOT_ST            shift, and go to state 7
    LOCAL_ST          shift, and go to state 8
    TRUE_ST           shift, and go to state 11
    FALSE_ST          shift, and go to state 12
    NIL_ST            shift, and go to state 13
    MINUS_OP          shift, and go to state 16
    INCREMENT_OP      shift, and go to state 17
    DICREMENT_OP      shift, and go to state 18
    NUMBER            shift, and go to state 19
    STRING            shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    LEFT_ARRAY        shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 96
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 44

   85 forstmt: FOR_ST LEFT_PARENTHESIS . elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTHESIS stmt

    NOT_ST            shift, and go to state 7
    LOCAL_ST          shift, and go to state 8
    TRUE_ST           shift, and go to state 11
    FALSE_ST          shift, and go to state 12
    NIL_ST            shift, and go to state 13
    MINUS_OP          shift, and go to state 16
    INCREMENT_OP      shift, and go to state 17
    DICREMENT_OP      shift, and go to state 18
    NUMBER            shift, and go to state 19
    STRING            shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    LEFT_ARRAY        shift, and go to state 25
    ID                shift, and go to state 26

    $default  reduce using rule 60 (elist)

    expr        go to state 65
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 97
    objectdef   go to state 35
    const       go to state 38


State 45

   84 whilestmt: WHILE_ST LEFT_PARENTHESIS . expr RIGHT_PARENTHESIS stmt

    NOT_ST            shift, and go to state 7
    LOCAL_ST          shift, and go to state 8
    TRUE_ST           shift, and go to state 11
    FALSE_ST          shift, and go to state 12
    NIL_ST            shift, and go to state 13
    MINUS_OP          shift, and go to state 16
    INCREMENT_OP      shift, and go to state 17
    DICREMENT_OP      shift, and go to state 18
    NUMBER            shift, and go to state 19
    STRING            shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    LEFT_ARRAY        shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 98
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 46

   16 expr: expr . PLUS_OP expr
   17     | expr . MINUS_OP expr
   18     | expr . MULTI_OP expr
   19     | expr . DIVISION_OP expr
   20     | expr . PERCENT_OP expr
   21     | expr . COMP_BIGGER_OP expr
   22     | expr . COMP_BIGGER_EQUAL_OP expr
   23     | expr . COMP_LESS_OP expr
   24     | expr . COMP_LESS_EQUAL_OP expr
   25     | expr . COMP_EQUAL_OP expr
   26     | expr . COMP_NOT_EQUAL_OP expr
   27     | expr . AND_ST expr
   28     | expr . OR_ST expr
   31 term: NOT_ST expr .

    $default  reduce using rule 31 (term)


State 47

   45 lvalue: LOCAL_ST ID .

    $default  reduce using rule 45 (lvalue)


State 48

   11 stmt: CONTINUE_ST SEMICOLON .

    $default  reduce using rule 11 (stmt)


State 49

   10 stmt: BREAK_ST SEMICOLON .

    $default  reduce using rule 10 (stmt)


State 50

   71 funcdef: FUNC_ST LEFT_PARENTHESIS . idlist RIGHT_PARENTHESIS block

    ID  shift, and go to state 99

    $default  reduce using rule 79 (idlist)

    idlist  go to state 100


State 51

   72 funcdef: FUNC_ST ID . LEFT_PARENTHESIS idlist RIGHT_PARENTHESIS block

    LEFT_PARENTHESIS  shift, and go to state 101


State 52

   86 returnstmt: RETURN_ST SEMICOLON .

    $default  reduce using rule 86 (returnstmt)


State 53

   16 expr: expr . PLUS_OP expr
   17     | expr . MINUS_OP expr
   18     | expr . MULTI_OP expr
   19     | expr . DIVISION_OP expr
   20     | expr . PERCENT_OP expr
   21     | expr . COMP_BIGGER_OP expr
   22     | expr . COMP_BIGGER_EQUAL_OP expr
   23     | expr . COMP_LESS_OP expr
   24     | expr . COMP_LESS_EQUAL_OP expr
   25     | expr . COMP_EQUAL_OP expr
   26     | expr . COMP_NOT_EQUAL_OP expr
   27     | expr . AND_ST expr
   28     | expr . OR_ST expr
   87 returnstmt: RETURN_ST expr . SEMICOLON

    AND_ST                shift, and go to state 69
    OR_ST                 shift, and go to state 70
    PLUS_OP               shift, and go to state 71
    MINUS_OP              shift, and go to state 72
    MULTI_OP              shift, and go to state 73
    DIVISION_OP           shift, and go to state 74
    PERCENT_OP            shift, and go to state 75
    COMP_EQUAL_OP         shift, and go to state 76
    COMP_NOT_EQUAL_OP     shift, and go to state 77
    COMP_BIGGER_OP        shift, and go to state 78
    COMP_LESS_OP          shift, and go to state 79
    COMP_BIGGER_EQUAL_OP  shift, and go to state 80
    COMP_LESS_EQUAL_OP    shift, and go to state 81
    SEMICOLON             shift, and go to state 102


State 54

   16 expr: expr . PLUS_OP expr
   17     | expr . MINUS_OP expr
   18     | expr . MULTI_OP expr
   19     | expr . DIVISION_OP expr
   20     | expr . PERCENT_OP expr
   21     | expr . COMP_BIGGER_OP expr
   22     | expr . COMP_BIGGER_EQUAL_OP expr
   23     | expr . COMP_LESS_OP expr
   24     | expr . COMP_LESS_EQUAL_OP expr
   25     | expr . COMP_EQUAL_OP expr
   26     | expr . COMP_NOT_EQUAL_OP expr
   27     | expr . AND_ST expr
   28     | expr . OR_ST expr
   36 term: MINUS_OP expr .

    $default  reduce using rule 36 (term)


State 55

   54 call: LEFT_PARENTHESIS . funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    FUNC_ST  shift, and go to state 14

    funcdef  go to state 103


State 56

   32 term: INCREMENT_OP lvalue .
   48 member: lvalue . FULL_STOP ID
   49       | lvalue . LEFT_ARRAY expr RIGHT_ARRAY
   53 call: lvalue . callsuffix

    LEFT_PARENTHESIS  shift, and go to state 86
    FULL_STOP         shift, and go to state 87
    RANGE             shift, and go to state 88
    LEFT_ARRAY        shift, and go to state 89

    $default  reduce using rule 32 (term)

    callsuffix  go to state 90
    normcall    go to state 91
    methodcall  go to state 92


State 57

   50 member: call . FULL_STOP ID
   51       | call . LEFT_ARRAY expr RIGHT_ARRAY
   52 call: call . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 93
    FULL_STOP         shift, and go to state 94
    LEFT_ARRAY        shift, and go to state 95


State 58

   34 term: DICREMENT_OP lvalue .
   48 member: lvalue . FULL_STOP ID
   49       | lvalue . LEFT_ARRAY expr RIGHT_ARRAY
   53 call: lvalue . callsuffix

    LEFT_PARENTHESIS  shift, and go to state 86
    FULL_STOP         shift, and go to state 87
    RANGE             shift, and go to state 88
    LEFT_ARRAY        shift, and go to state 89

    $default  reduce using rule 34 (term)

    callsuffix  go to state 90
    normcall    go to state 91
    methodcall  go to state 92


State 59

   69 block: LEFT_CBRACKET RIGHT_CBRACKET .

    $default  reduce using rule 69 (block)


State 60

    3 stmts: stmts . stmt
   70 block: LEFT_CBRACKET stmts . RIGHT_CBRACKET

    IF_ST             shift, and go to state 4
    FOR_ST            shift, and go to state 5
    WHILE_ST          shift, and go to state 6
    NOT_ST            shift, and go to state 7
    LOCAL_ST          shift, and go to state 8
    CONTINUE_ST       shift, and go to state 9
    BREAK_ST          shift, and go to state 10
    TRUE_ST           shift, and go to state 11
    FALSE_ST          shift, and go to state 12
    NIL_ST            shift, and go to state 13
    FUNC_ST           shift, and go to state 14
    RETURN_ST         shift, and go to state 15
    MINUS_OP          shift, and go to state 16
    INCREMENT_OP      shift, and go to state 17
    DICREMENT_OP      shift, and go to state 18
    NUMBER            shift, and go to state 19
    STRING            shift, and go to state 20
    LEFT_CBRACKET     shift, and go to state 21
    RIGHT_CBRACKET    shift, and go to state 104
    LEFT_PARENTHESIS  shift, and go to state 22
    SEMICOLON         shift, and go to state 23
    DOUBLE_COLON      shift, and go to state 24
    LEFT_ARRAY        shift, and go to state 25
    ID                shift, and go to state 26

    stmt        go to state 105
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifstmt      go to state 39
    whilestmt   go to state 40
    forstmt     go to state 41
    returnstmt  go to state 42


State 61

   16 expr: expr . PLUS_OP expr
   17     | expr . MINUS_OP expr
   18     | expr . MULTI_OP expr
   19     | expr . DIVISION_OP expr
   20     | expr . PERCENT_OP expr
   21     | expr . COMP_BIGGER_OP expr
   22     | expr . COMP_BIGGER_EQUAL_OP expr
   23     | expr . COMP_LESS_OP expr
   24     | expr . COMP_LESS_EQUAL_OP expr
   25     | expr . COMP_EQUAL_OP expr
   26     | expr . COMP_NOT_EQUAL_OP expr
   27     | expr . AND_ST expr
   28     | expr . OR_ST expr
   30 term: LEFT_PARENTHESIS expr . RIGHT_PARENTHESIS

    AND_ST                shift, and go to state 69
    OR_ST                 shift, and go to state 70
    PLUS_OP               shift, and go to state 71
    MINUS_OP              shift, and go to state 72
    MULTI_OP              shift, and go to state 73
    DIVISION_OP           shift, and go to state 74
    PERCENT_OP            shift, and go to state 75
    COMP_EQUAL_OP         shift, and go to state 76
    COMP_NOT_EQUAL_OP     shift, and go to state 77
    COMP_BIGGER_OP        shift, and go to state 78
    COMP_LESS_OP          shift, and go to state 79
    COMP_BIGGER_EQUAL_OP  shift, and go to state 80
    COMP_LESS_EQUAL_OP    shift, and go to state 81
    RIGHT_PARENTHESIS     shift, and go to state 106


State 62

   42 primary: LEFT_PARENTHESIS funcdef . RIGHT_PARENTHESIS
   54 call: LEFT_PARENTHESIS funcdef . RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 107


State 63

   46 lvalue: DOUBLE_COLON ID .

    $default  reduce using rule 46 (lvalue)


State 64

   68 indexedelem: LEFT_CBRACKET . expr COLON expr LEFT_CBRACKET

    NOT_ST            shift, and go to state 7
    LOCAL_ST          shift, and go to state 8
    TRUE_ST           shift, and go to state 11
    FALSE_ST          shift, and go to state 12
    NIL_ST            shift, and go to state 13
    MINUS_OP          shift, and go to state 16
    INCREMENT_OP      shift, and go to state 17
    DICREMENT_OP      shift, and go to state 18
    NUMBER            shift, and go to state 19
    STRING            shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    LEFT_ARRAY        shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 108
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 65

   16 expr: expr . PLUS_OP expr
   17     | expr . MINUS_OP expr
   18     | expr . MULTI_OP expr
   19     | expr . DIVISION_OP expr
   20     | expr . PERCENT_OP expr
   21     | expr . COMP_BIGGER_OP expr
   22     | expr . COMP_BIGGER_EQUAL_OP expr
   23     | expr . COMP_LESS_OP expr
   24     | expr . COMP_LESS_EQUAL_OP expr
   25     | expr . COMP_EQUAL_OP expr
   26     | expr . COMP_NOT_EQUAL_OP expr
   27     | expr . AND_ST expr
   28     | expr . OR_ST expr
   59 elist: expr . exprs

    AND_ST                shift, and go to state 69
    OR_ST                 shift, and go to state 70
    PLUS_OP               shift, and go to state 71
    MINUS_OP              shift, and go to state 72
    MULTI_OP              shift, and go to state 73
    DIVISION_OP           shift, and go to state 74
    PERCENT_OP            shift, and go to state 75
    COMP_EQUAL_OP         shift, and go to state 76
    COMP_NOT_EQUAL_OP     shift, and go to state 77
    COMP_BIGGER_OP        shift, and go to state 78
    COMP_LESS_OP          shift, and go to state 79
    COMP_BIGGER_EQUAL_OP  shift, and go to state 80
    COMP_LESS_EQUAL_OP    shift, and go to state 81
    COMMA                 shift, and go to state 109

    $default  reduce using rule 62 (exprs)

    exprs  go to state 110


State 66

   63 objectdef: LEFT_ARRAY elist . RIGHT_ARRAY

    RIGHT_ARRAY  shift, and go to state 111


State 67

   64 objectdef: LEFT_ARRAY indexed . RIGHT_ARRAY

    RIGHT_ARRAY  shift, and go to state 112


State 68

   65 indexed: indexedelem . indexedelems

    COMMA  shift, and go to state 113

    $default  reduce using rule 67 (indexedelems)

    indexedelems  go to state 114


State 69

   27 expr: expr AND_ST . expr

    NOT_ST            shift, and go to state 7
    LOCAL_ST          shift, and go to state 8
    TRUE_ST           shift, and go to state 11
    FALSE_ST          shift, and go to state 12
    NIL_ST            shift, and go to state 13
    MINUS_OP          shift, and go to state 16
    INCREMENT_OP      shift, and go to state 17
    DICREMENT_OP      shift, and go to state 18
    NUMBER            shift, and go to state 19
    STRING            shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    LEFT_ARRAY        shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 115
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 70

   28 expr: expr OR_ST . expr

    NOT_ST            shift, and go to state 7
    LOCAL_ST          shift, and go to state 8
    TRUE_ST           shift, and go to state 11
    FALSE_ST          shift, and go to state 12
    NIL_ST            shift, and go to state 13
    MINUS_OP          shift, and go to state 16
    INCREMENT_OP      shift, and go to state 17
    DICREMENT_OP      shift, and go to state 18
    NUMBER            shift, and go to state 19
    STRING            shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    LEFT_ARRAY        shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 116
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 71

   16 expr: expr PLUS_OP . expr

    NOT_ST            shift, and go to state 7
    LOCAL_ST          shift, and go to state 8
    TRUE_ST           shift, and go to state 11
    FALSE_ST          shift, and go to state 12
    NIL_ST            shift, and go to state 13
    MINUS_OP          shift, and go to state 16
    INCREMENT_OP      shift, and go to state 17
    DICREMENT_OP      shift, and go to state 18
    NUMBER            shift, and go to state 19
    STRING            shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    LEFT_ARRAY        shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 117
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 72

   17 expr: expr MINUS_OP . expr

    NOT_ST            shift, and go to state 7
    LOCAL_ST          shift, and go to state 8
    TRUE_ST           shift, and go to state 11
    FALSE_ST          shift, and go to state 12
    NIL_ST            shift, and go to state 13
    MINUS_OP          shift, and go to state 16
    INCREMENT_OP      shift, and go to state 17
    DICREMENT_OP      shift, and go to state 18
    NUMBER            shift, and go to state 19
    STRING            shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    LEFT_ARRAY        shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 118
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 73

   18 expr: expr MULTI_OP . expr

    NOT_ST            shift, and go to state 7
    LOCAL_ST          shift, and go to state 8
    TRUE_ST           shift, and go to state 11
    FALSE_ST          shift, and go to state 12
    NIL_ST            shift, and go to state 13
    MINUS_OP          shift, and go to state 16
    INCREMENT_OP      shift, and go to state 17
    DICREMENT_OP      shift, and go to state 18
    NUMBER            shift, and go to state 19
    STRING            shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    LEFT_ARRAY        shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 119
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 74

   19 expr: expr DIVISION_OP . expr

    NOT_ST            shift, and go to state 7
    LOCAL_ST          shift, and go to state 8
    TRUE_ST           shift, and go to state 11
    FALSE_ST          shift, and go to state 12
    NIL_ST            shift, and go to state 13
    MINUS_OP          shift, and go to state 16
    INCREMENT_OP      shift, and go to state 17
    DICREMENT_OP      shift, and go to state 18
    NUMBER            shift, and go to state 19
    STRING            shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    LEFT_ARRAY        shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 120
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 75

   20 expr: expr PERCENT_OP . expr

    NOT_ST            shift, and go to state 7
    LOCAL_ST          shift, and go to state 8
    TRUE_ST           shift, and go to state 11
    FALSE_ST          shift, and go to state 12
    NIL_ST            shift, and go to state 13
    MINUS_OP          shift, and go to state 16
    INCREMENT_OP      shift, and go to state 17
    DICREMENT_OP      shift, and go to state 18
    NUMBER            shift, and go to state 19
    STRING            shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    LEFT_ARRAY        shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 121
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 76

   25 expr: expr COMP_EQUAL_OP . expr

    NOT_ST            shift, and go to state 7
    LOCAL_ST          shift, and go to state 8
    TRUE_ST           shift, and go to state 11
    FALSE_ST          shift, and go to state 12
    NIL_ST            shift, and go to state 13
    MINUS_OP          shift, and go to state 16
    INCREMENT_OP      shift, and go to state 17
    DICREMENT_OP      shift, and go to state 18
    NUMBER            shift, and go to state 19
    STRING            shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    LEFT_ARRAY        shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 122
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 77

   26 expr: expr COMP_NOT_EQUAL_OP . expr

    NOT_ST            shift, and go to state 7
    LOCAL_ST          shift, and go to state 8
    TRUE_ST           shift, and go to state 11
    FALSE_ST          shift, and go to state 12
    NIL_ST            shift, and go to state 13
    MINUS_OP          shift, and go to state 16
    INCREMENT_OP      shift, and go to state 17
    DICREMENT_OP      shift, and go to state 18
    NUMBER            shift, and go to state 19
    STRING            shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    LEFT_ARRAY        shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 123
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 78

   21 expr: expr COMP_BIGGER_OP . expr

    NOT_ST            shift, and go to state 7
    LOCAL_ST          shift, and go to state 8
    TRUE_ST           shift, and go to state 11
    FALSE_ST          shift, and go to state 12
    NIL_ST            shift, and go to state 13
    MINUS_OP          shift, and go to state 16
    INCREMENT_OP      shift, and go to state 17
    DICREMENT_OP      shift, and go to state 18
    NUMBER            shift, and go to state 19
    STRING            shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    LEFT_ARRAY        shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 124
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 79

   23 expr: expr COMP_LESS_OP . expr

    NOT_ST            shift, and go to state 7
    LOCAL_ST          shift, and go to state 8
    TRUE_ST           shift, and go to state 11
    FALSE_ST          shift, and go to state 12
    NIL_ST            shift, and go to state 13
    MINUS_OP          shift, and go to state 16
    INCREMENT_OP      shift, and go to state 17
    DICREMENT_OP      shift, and go to state 18
    NUMBER            shift, and go to state 19
    STRING            shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    LEFT_ARRAY        shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 125
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 80

   22 expr: expr COMP_BIGGER_EQUAL_OP . expr

    NOT_ST            shift, and go to state 7
    LOCAL_ST          shift, and go to state 8
    TRUE_ST           shift, and go to state 11
    FALSE_ST          shift, and go to state 12
    NIL_ST            shift, and go to state 13
    MINUS_OP          shift, and go to state 16
    INCREMENT_OP      shift, and go to state 17
    DICREMENT_OP      shift, and go to state 18
    NUMBER            shift, and go to state 19
    STRING            shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    LEFT_ARRAY        shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 126
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 81

   24 expr: expr COMP_LESS_EQUAL_OP . expr

    NOT_ST            shift, and go to state 7
    LOCAL_ST          shift, and go to state 8
    TRUE_ST           shift, and go to state 11
    FALSE_ST          shift, and go to state 12
    NIL_ST            shift, and go to state 13
    MINUS_OP          shift, and go to state 16
    INCREMENT_OP      shift, and go to state 17
    DICREMENT_OP      shift, and go to state 18
    NUMBER            shift, and go to state 19
    STRING            shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    LEFT_ARRAY        shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 127
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 82

    5 stmt: expr SEMICOLON .

    $default  reduce using rule 5 (stmt)


State 83

   38 assignexpr: lvalue EQUAL_OP . expr

    NOT_ST            shift, and go to state 7
    LOCAL_ST          shift, and go to state 8
    TRUE_ST           shift, and go to state 11
    FALSE_ST          shift, and go to state 12
    NIL_ST            shift, and go to state 13
    MINUS_OP          shift, and go to state 16
    INCREMENT_OP      shift, and go to state 17
    DICREMENT_OP      shift, and go to state 18
    NUMBER            shift, and go to state 19
    STRING            shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    LEFT_ARRAY        shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 128
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 84

   33 term: lvalue INCREMENT_OP .

    $default  reduce using rule 33 (term)


State 85

   35 term: lvalue DICREMENT_OP .

    $default  reduce using rule 35 (term)


State 86

   57 normcall: LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS

    NOT_ST            shift, and go to state 7
    LOCAL_ST          shift, and go to state 8
    TRUE_ST           shift, and go to state 11
    FALSE_ST          shift, and go to state 12
    NIL_ST            shift, and go to state 13
    MINUS_OP          shift, and go to state 16
    INCREMENT_OP      shift, and go to state 17
    DICREMENT_OP      shift, and go to state 18
    NUMBER            shift, and go to state 19
    STRING            shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    LEFT_ARRAY        shift, and go to state 25
    ID                shift, and go to state 26

    $default  reduce using rule 60 (elist)

    expr        go to state 65
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 129
    objectdef   go to state 35
    const       go to state 38


State 87

   48 member: lvalue FULL_STOP . ID

    ID  shift, and go to state 130


State 88

   58 methodcall: RANGE . ID LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    ID  shift, and go to state 131


State 89

   49 member: lvalue LEFT_ARRAY . expr RIGHT_ARRAY

    NOT_ST            shift, and go to state 7
    LOCAL_ST          shift, and go to state 8
    TRUE_ST           shift, and go to state 11
    FALSE_ST          shift, and go to state 12
    NIL_ST            shift, and go to state 13
    MINUS_OP          shift, and go to state 16
    INCREMENT_OP      shift, and go to state 17
    DICREMENT_OP      shift, and go to state 18
    NUMBER            shift, and go to state 19
    STRING            shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    LEFT_ARRAY        shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 132
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 90

   53 call: lvalue callsuffix .

    $default  reduce using rule 53 (call)


State 91

   55 callsuffix: normcall .

    $default  reduce using rule 55 (callsuffix)


State 92

   56 callsuffix: methodcall .

    $default  reduce using rule 56 (callsuffix)


State 93

   52 call: call LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS

    NOT_ST            shift, and go to state 7
    LOCAL_ST          shift, and go to state 8
    TRUE_ST           shift, and go to state 11
    FALSE_ST          shift, and go to state 12
    NIL_ST            shift, and go to state 13
    MINUS_OP          shift, and go to state 16
    INCREMENT_OP      shift, and go to state 17
    DICREMENT_OP      shift, and go to state 18
    NUMBER            shift, and go to state 19
    STRING            shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    LEFT_ARRAY        shift, and go to state 25
    ID                shift, and go to state 26

    $default  reduce using rule 60 (elist)

    expr        go to state 65
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 133
    objectdef   go to state 35
    const       go to state 38


State 94

   50 member: call FULL_STOP . ID

    ID  shift, and go to state 134


State 95

   51 member: call LEFT_ARRAY . expr RIGHT_ARRAY

    NOT_ST            shift, and go to state 7
    LOCAL_ST          shift, and go to state 8
    TRUE_ST           shift, and go to state 11
    FALSE_ST          shift, and go to state 12
    NIL_ST            shift, and go to state 13
    MINUS_OP          shift, and go to state 16
    INCREMENT_OP      shift, and go to state 17
    DICREMENT_OP      shift, and go to state 18
    NUMBER            shift, and go to state 19
    STRING            shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    LEFT_ARRAY        shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 135
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 96

   16 expr: expr . PLUS_OP expr
   17     | expr . MINUS_OP expr
   18     | expr . MULTI_OP expr
   19     | expr . DIVISION_OP expr
   20     | expr . PERCENT_OP expr
   21     | expr . COMP_BIGGER_OP expr
   22     | expr . COMP_BIGGER_EQUAL_OP expr
   23     | expr . COMP_LESS_OP expr
   24     | expr . COMP_LESS_EQUAL_OP expr
   25     | expr . COMP_EQUAL_OP expr
   26     | expr . COMP_NOT_EQUAL_OP expr
   27     | expr . AND_ST expr
   28     | expr . OR_ST expr
   82 ifstmt: IF_ST LEFT_PARENTHESIS expr . RIGHT_PARENTHESIS stmt
   83       | IF_ST LEFT_PARENTHESIS expr . RIGHT_PARENTHESIS stmt ELSE_ST stmt

    AND_ST                shift, and go to state 69
    OR_ST                 shift, and go to state 70
    PLUS_OP               shift, and go to state 71
    MINUS_OP              shift, and go to state 72
    MULTI_OP              shift, and go to state 73
    DIVISION_OP           shift, and go to state 74
    PERCENT_OP            shift, and go to state 75
    COMP_EQUAL_OP         shift, and go to state 76
    COMP_NOT_EQUAL_OP     shift, and go to state 77
    COMP_BIGGER_OP        shift, and go to state 78
    COMP_LESS_OP          shift, and go to state 79
    COMP_BIGGER_EQUAL_OP  shift, and go to state 80
    COMP_LESS_EQUAL_OP    shift, and go to state 81
    RIGHT_PARENTHESIS     shift, and go to state 136


State 97

   85 forstmt: FOR_ST LEFT_PARENTHESIS elist . SEMICOLON expr SEMICOLON elist RIGHT_PARENTHESIS stmt

    SEMICOLON  shift, and go to state 137


State 98

   16 expr: expr . PLUS_OP expr
   17     | expr . MINUS_OP expr
   18     | expr . MULTI_OP expr
   19     | expr . DIVISION_OP expr
   20     | expr . PERCENT_OP expr
   21     | expr . COMP_BIGGER_OP expr
   22     | expr . COMP_BIGGER_EQUAL_OP expr
   23     | expr . COMP_LESS_OP expr
   24     | expr . COMP_LESS_EQUAL_OP expr
   25     | expr . COMP_EQUAL_OP expr
   26     | expr . COMP_NOT_EQUAL_OP expr
   27     | expr . AND_ST expr
   28     | expr . OR_ST expr
   84 whilestmt: WHILE_ST LEFT_PARENTHESIS expr . RIGHT_PARENTHESIS stmt

    AND_ST                shift, and go to state 69
    OR_ST                 shift, and go to state 70
    PLUS_OP               shift, and go to state 71
    MINUS_OP              shift, and go to state 72
    MULTI_OP              shift, and go to state 73
    DIVISION_OP           shift, and go to state 74
    PERCENT_OP            shift, and go to state 75
    COMP_EQUAL_OP         shift, and go to state 76
    COMP_NOT_EQUAL_OP     shift, and go to state 77
    COMP_BIGGER_OP        shift, and go to state 78
    COMP_LESS_OP          shift, and go to state 79
    COMP_BIGGER_EQUAL_OP  shift, and go to state 80
    COMP_LESS_EQUAL_OP    shift, and go to state 81
    RIGHT_PARENTHESIS     shift, and go to state 138


State 99

   78 idlist: ID . IDS

    COMMA  shift, and go to state 139

    $default  reduce using rule 81 (IDS)

    IDS  go to state 140


State 100

   71 funcdef: FUNC_ST LEFT_PARENTHESIS idlist . RIGHT_PARENTHESIS block

    RIGHT_PARENTHESIS  shift, and go to state 141


State 101

   72 funcdef: FUNC_ST ID LEFT_PARENTHESIS . idlist RIGHT_PARENTHESIS block

    ID  shift, and go to state 99

    $default  reduce using rule 79 (idlist)

    idlist  go to state 142


State 102

   87 returnstmt: RETURN_ST expr SEMICOLON .

    $default  reduce using rule 87 (returnstmt)


State 103

   54 call: LEFT_PARENTHESIS funcdef . RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 143


State 104

   70 block: LEFT_CBRACKET stmts RIGHT_CBRACKET .

    $default  reduce using rule 70 (block)


State 105

    3 stmts: stmts stmt .

    $default  reduce using rule 3 (stmts)


State 106

   30 term: LEFT_PARENTHESIS expr RIGHT_PARENTHESIS .

    $default  reduce using rule 30 (term)


State 107

   42 primary: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS .
   54 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 144

    $default  reduce using rule 42 (primary)


State 108

   16 expr: expr . PLUS_OP expr
   17     | expr . MINUS_OP expr
   18     | expr . MULTI_OP expr
   19     | expr . DIVISION_OP expr
   20     | expr . PERCENT_OP expr
   21     | expr . COMP_BIGGER_OP expr
   22     | expr . COMP_BIGGER_EQUAL_OP expr
   23     | expr . COMP_LESS_OP expr
   24     | expr . COMP_LESS_EQUAL_OP expr
   25     | expr . COMP_EQUAL_OP expr
   26     | expr . COMP_NOT_EQUAL_OP expr
   27     | expr . AND_ST expr
   28     | expr . OR_ST expr
   68 indexedelem: LEFT_CBRACKET expr . COLON expr LEFT_CBRACKET

    AND_ST                shift, and go to state 69
    OR_ST                 shift, and go to state 70
    PLUS_OP               shift, and go to state 71
    MINUS_OP              shift, and go to state 72
    MULTI_OP              shift, and go to state 73
    DIVISION_OP           shift, and go to state 74
    PERCENT_OP            shift, and go to state 75
    COMP_EQUAL_OP         shift, and go to state 76
    COMP_NOT_EQUAL_OP     shift, and go to state 77
    COMP_BIGGER_OP        shift, and go to state 78
    COMP_LESS_OP          shift, and go to state 79
    COMP_BIGGER_EQUAL_OP  shift, and go to state 80
    COMP_LESS_EQUAL_OP    shift, and go to state 81
    COLON                 shift, and go to state 145


State 109

   61 exprs: COMMA . expr exprs

    NOT_ST            shift, and go to state 7
    LOCAL_ST          shift, and go to state 8
    TRUE_ST           shift, and go to state 11
    FALSE_ST          shift, and go to state 12
    NIL_ST            shift, and go to state 13
    MINUS_OP          shift, and go to state 16
    INCREMENT_OP      shift, and go to state 17
    DICREMENT_OP      shift, and go to state 18
    NUMBER            shift, and go to state 19
    STRING            shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    LEFT_ARRAY        shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 146
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 110

   59 elist: expr exprs .

    $default  reduce using rule 59 (elist)


State 111

   63 objectdef: LEFT_ARRAY elist RIGHT_ARRAY .

    $default  reduce using rule 63 (objectdef)


State 112

   64 objectdef: LEFT_ARRAY indexed RIGHT_ARRAY .

    $default  reduce using rule 64 (objectdef)


State 113

   66 indexedelems: COMMA . indexedelem indexedelems

    LEFT_CBRACKET  shift, and go to state 64

    indexedelem  go to state 147


State 114

   65 indexed: indexedelem indexedelems .

    $default  reduce using rule 65 (indexed)


State 115

   16 expr: expr . PLUS_OP expr
   17     | expr . MINUS_OP expr
   18     | expr . MULTI_OP expr
   19     | expr . DIVISION_OP expr
   20     | expr . PERCENT_OP expr
   21     | expr . COMP_BIGGER_OP expr
   22     | expr . COMP_BIGGER_EQUAL_OP expr
   23     | expr . COMP_LESS_OP expr
   24     | expr . COMP_LESS_EQUAL_OP expr
   25     | expr . COMP_EQUAL_OP expr
   26     | expr . COMP_NOT_EQUAL_OP expr
   27     | expr . AND_ST expr
   27     | expr AND_ST expr .
   28     | expr . OR_ST expr

    PLUS_OP               shift, and go to state 71
    MINUS_OP              shift, and go to state 72
    MULTI_OP              shift, and go to state 73
    DIVISION_OP           shift, and go to state 74
    PERCENT_OP            shift, and go to state 75
    COMP_EQUAL_OP         shift, and go to state 76
    COMP_NOT_EQUAL_OP     shift, and go to state 77
    COMP_BIGGER_OP        shift, and go to state 78
    COMP_LESS_OP          shift, and go to state 79
    COMP_BIGGER_EQUAL_OP  shift, and go to state 80
    COMP_LESS_EQUAL_OP    shift, and go to state 81

    $default  reduce using rule 27 (expr)


State 116

   16 expr: expr . PLUS_OP expr
   17     | expr . MINUS_OP expr
   18     | expr . MULTI_OP expr
   19     | expr . DIVISION_OP expr
   20     | expr . PERCENT_OP expr
   21     | expr . COMP_BIGGER_OP expr
   22     | expr . COMP_BIGGER_EQUAL_OP expr
   23     | expr . COMP_LESS_OP expr
   24     | expr . COMP_LESS_EQUAL_OP expr
   25     | expr . COMP_EQUAL_OP expr
   26     | expr . COMP_NOT_EQUAL_OP expr
   27     | expr . AND_ST expr
   28     | expr . OR_ST expr
   28     | expr OR_ST expr .

    AND_ST                shift, and go to state 69
    PLUS_OP               shift, and go to state 71
    MINUS_OP              shift, and go to state 72
    MULTI_OP              shift, and go to state 73
    DIVISION_OP           shift, and go to state 74
    PERCENT_OP            shift, and go to state 75
    COMP_EQUAL_OP         shift, and go to state 76
    COMP_NOT_EQUAL_OP     shift, and go to state 77
    COMP_BIGGER_OP        shift, and go to state 78
    COMP_LESS_OP          shift, and go to state 79
    COMP_BIGGER_EQUAL_OP  shift, and go to state 80
    COMP_LESS_EQUAL_OP    shift, and go to state 81

    $default  reduce using rule 28 (expr)


State 117

   16 expr: expr . PLUS_OP expr
   16     | expr PLUS_OP expr .
   17     | expr . MINUS_OP expr
   18     | expr . MULTI_OP expr
   19     | expr . DIVISION_OP expr
   20     | expr . PERCENT_OP expr
   21     | expr . COMP_BIGGER_OP expr
   22     | expr . COMP_BIGGER_EQUAL_OP expr
   23     | expr . COMP_LESS_OP expr
   24     | expr . COMP_LESS_EQUAL_OP expr
   25     | expr . COMP_EQUAL_OP expr
   26     | expr . COMP_NOT_EQUAL_OP expr
   27     | expr . AND_ST expr
   28     | expr . OR_ST expr

    MULTI_OP     shift, and go to state 73
    DIVISION_OP  shift, and go to state 74
    PERCENT_OP   shift, and go to state 75

    $default  reduce using rule 16 (expr)


State 118

   16 expr: expr . PLUS_OP expr
   17     | expr . MINUS_OP expr
   17     | expr MINUS_OP expr .
   18     | expr . MULTI_OP expr
   19     | expr . DIVISION_OP expr
   20     | expr . PERCENT_OP expr
   21     | expr . COMP_BIGGER_OP expr
   22     | expr . COMP_BIGGER_EQUAL_OP expr
   23     | expr . COMP_LESS_OP expr
   24     | expr . COMP_LESS_EQUAL_OP expr
   25     | expr . COMP_EQUAL_OP expr
   26     | expr . COMP_NOT_EQUAL_OP expr
   27     | expr . AND_ST expr
   28     | expr . OR_ST expr

    MULTI_OP     shift, and go to state 73
    DIVISION_OP  shift, and go to state 74
    PERCENT_OP   shift, and go to state 75

    $default  reduce using rule 17 (expr)


State 119

   16 expr: expr . PLUS_OP expr
   17     | expr . MINUS_OP expr
   18     | expr . MULTI_OP expr
   18     | expr MULTI_OP expr .
   19     | expr . DIVISION_OP expr
   20     | expr . PERCENT_OP expr
   21     | expr . COMP_BIGGER_OP expr
   22     | expr . COMP_BIGGER_EQUAL_OP expr
   23     | expr . COMP_LESS_OP expr
   24     | expr . COMP_LESS_EQUAL_OP expr
   25     | expr . COMP_EQUAL_OP expr
   26     | expr . COMP_NOT_EQUAL_OP expr
   27     | expr . AND_ST expr
   28     | expr . OR_ST expr

    $default  reduce using rule 18 (expr)


State 120

   16 expr: expr . PLUS_OP expr
   17     | expr . MINUS_OP expr
   18     | expr . MULTI_OP expr
   19     | expr . DIVISION_OP expr
   19     | expr DIVISION_OP expr .
   20     | expr . PERCENT_OP expr
   21     | expr . COMP_BIGGER_OP expr
   22     | expr . COMP_BIGGER_EQUAL_OP expr
   23     | expr . COMP_LESS_OP expr
   24     | expr . COMP_LESS_EQUAL_OP expr
   25     | expr . COMP_EQUAL_OP expr
   26     | expr . COMP_NOT_EQUAL_OP expr
   27     | expr . AND_ST expr
   28     | expr . OR_ST expr

    $default  reduce using rule 19 (expr)


State 121

   16 expr: expr . PLUS_OP expr
   17     | expr . MINUS_OP expr
   18     | expr . MULTI_OP expr
   19     | expr . DIVISION_OP expr
   20     | expr . PERCENT_OP expr
   20     | expr PERCENT_OP expr .
   21     | expr . COMP_BIGGER_OP expr
   22     | expr . COMP_BIGGER_EQUAL_OP expr
   23     | expr . COMP_LESS_OP expr
   24     | expr . COMP_LESS_EQUAL_OP expr
   25     | expr . COMP_EQUAL_OP expr
   26     | expr . COMP_NOT_EQUAL_OP expr
   27     | expr . AND_ST expr
   28     | expr . OR_ST expr

    $default  reduce using rule 20 (expr)


State 122

   16 expr: expr . PLUS_OP expr
   17     | expr . MINUS_OP expr
   18     | expr . MULTI_OP expr
   19     | expr . DIVISION_OP expr
   20     | expr . PERCENT_OP expr
   21     | expr . COMP_BIGGER_OP expr
   22     | expr . COMP_BIGGER_EQUAL_OP expr
   23     | expr . COMP_LESS_OP expr
   24     | expr . COMP_LESS_EQUAL_OP expr
   25     | expr . COMP_EQUAL_OP expr
   25     | expr COMP_EQUAL_OP expr .
   26     | expr . COMP_NOT_EQUAL_OP expr
   27     | expr . AND_ST expr
   28     | expr . OR_ST expr

    PLUS_OP               shift, and go to state 71
    MINUS_OP              shift, and go to state 72
    MULTI_OP              shift, and go to state 73
    DIVISION_OP           shift, and go to state 74
    PERCENT_OP            shift, and go to state 75
    COMP_BIGGER_OP        shift, and go to state 78
    COMP_LESS_OP          shift, and go to state 79
    COMP_BIGGER_EQUAL_OP  shift, and go to state 80
    COMP_LESS_EQUAL_OP    shift, and go to state 81

    COMP_EQUAL_OP      error (nonassociative)
    COMP_NOT_EQUAL_OP  error (nonassociative)

    $default  reduce using rule 25 (expr)


State 123

   16 expr: expr . PLUS_OP expr
   17     | expr . MINUS_OP expr
   18     | expr . MULTI_OP expr
   19     | expr . DIVISION_OP expr
   20     | expr . PERCENT_OP expr
   21     | expr . COMP_BIGGER_OP expr
   22     | expr . COMP_BIGGER_EQUAL_OP expr
   23     | expr . COMP_LESS_OP expr
   24     | expr . COMP_LESS_EQUAL_OP expr
   25     | expr . COMP_EQUAL_OP expr
   26     | expr . COMP_NOT_EQUAL_OP expr
   26     | expr COMP_NOT_EQUAL_OP expr .
   27     | expr . AND_ST expr
   28     | expr . OR_ST expr

    PLUS_OP               shift, and go to state 71
    MINUS_OP              shift, and go to state 72
    MULTI_OP              shift, and go to state 73
    DIVISION_OP           shift, and go to state 74
    PERCENT_OP            shift, and go to state 75
    COMP_BIGGER_OP        shift, and go to state 78
    COMP_LESS_OP          shift, and go to state 79
    COMP_BIGGER_EQUAL_OP  shift, and go to state 80
    COMP_LESS_EQUAL_OP    shift, and go to state 81

    COMP_EQUAL_OP      error (nonassociative)
    COMP_NOT_EQUAL_OP  error (nonassociative)

    $default  reduce using rule 26 (expr)


State 124

   16 expr: expr . PLUS_OP expr
   17     | expr . MINUS_OP expr
   18     | expr . MULTI_OP expr
   19     | expr . DIVISION_OP expr
   20     | expr . PERCENT_OP expr
   21     | expr . COMP_BIGGER_OP expr
   21     | expr COMP_BIGGER_OP expr .
   22     | expr . COMP_BIGGER_EQUAL_OP expr
   23     | expr . COMP_LESS_OP expr
   24     | expr . COMP_LESS_EQUAL_OP expr
   25     | expr . COMP_EQUAL_OP expr
   26     | expr . COMP_NOT_EQUAL_OP expr
   27     | expr . AND_ST expr
   28     | expr . OR_ST expr

    PLUS_OP      shift, and go to state 71
    MINUS_OP     shift, and go to state 72
    MULTI_OP     shift, and go to state 73
    DIVISION_OP  shift, and go to state 74
    PERCENT_OP   shift, and go to state 75

    COMP_BIGGER_OP        error (nonassociative)
    COMP_LESS_OP          error (nonassociative)
    COMP_BIGGER_EQUAL_OP  error (nonassociative)
    COMP_LESS_EQUAL_OP    error (nonassociative)

    $default  reduce using rule 21 (expr)


State 125

   16 expr: expr . PLUS_OP expr
   17     | expr . MINUS_OP expr
   18     | expr . MULTI_OP expr
   19     | expr . DIVISION_OP expr
   20     | expr . PERCENT_OP expr
   21     | expr . COMP_BIGGER_OP expr
   22     | expr . COMP_BIGGER_EQUAL_OP expr
   23     | expr . COMP_LESS_OP expr
   23     | expr COMP_LESS_OP expr .
   24     | expr . COMP_LESS_EQUAL_OP expr
   25     | expr . COMP_EQUAL_OP expr
   26     | expr . COMP_NOT_EQUAL_OP expr
   27     | expr . AND_ST expr
   28     | expr . OR_ST expr

    PLUS_OP      shift, and go to state 71
    MINUS_OP     shift, and go to state 72
    MULTI_OP     shift, and go to state 73
    DIVISION_OP  shift, and go to state 74
    PERCENT_OP   shift, and go to state 75

    COMP_BIGGER_OP        error (nonassociative)
    COMP_LESS_OP          error (nonassociative)
    COMP_BIGGER_EQUAL_OP  error (nonassociative)
    COMP_LESS_EQUAL_OP    error (nonassociative)

    $default  reduce using rule 23 (expr)


State 126

   16 expr: expr . PLUS_OP expr
   17     | expr . MINUS_OP expr
   18     | expr . MULTI_OP expr
   19     | expr . DIVISION_OP expr
   20     | expr . PERCENT_OP expr
   21     | expr . COMP_BIGGER_OP expr
   22     | expr . COMP_BIGGER_EQUAL_OP expr
   22     | expr COMP_BIGGER_EQUAL_OP expr .
   23     | expr . COMP_LESS_OP expr
   24     | expr . COMP_LESS_EQUAL_OP expr
   25     | expr . COMP_EQUAL_OP expr
   26     | expr . COMP_NOT_EQUAL_OP expr
   27     | expr . AND_ST expr
   28     | expr . OR_ST expr

    PLUS_OP      shift, and go to state 71
    MINUS_OP     shift, and go to state 72
    MULTI_OP     shift, and go to state 73
    DIVISION_OP  shift, and go to state 74
    PERCENT_OP   shift, and go to state 75

    COMP_BIGGER_OP        error (nonassociative)
    COMP_LESS_OP          error (nonassociative)
    COMP_BIGGER_EQUAL_OP  error (nonassociative)
    COMP_LESS_EQUAL_OP    error (nonassociative)

    $default  reduce using rule 22 (expr)


State 127

   16 expr: expr . PLUS_OP expr
   17     | expr . MINUS_OP expr
   18     | expr . MULTI_OP expr
   19     | expr . DIVISION_OP expr
   20     | expr . PERCENT_OP expr
   21     | expr . COMP_BIGGER_OP expr
   22     | expr . COMP_BIGGER_EQUAL_OP expr
   23     | expr . COMP_LESS_OP expr
   24     | expr . COMP_LESS_EQUAL_OP expr
   24     | expr COMP_LESS_EQUAL_OP expr .
   25     | expr . COMP_EQUAL_OP expr
   26     | expr . COMP_NOT_EQUAL_OP expr
   27     | expr . AND_ST expr
   28     | expr . OR_ST expr

    PLUS_OP      shift, and go to state 71
    MINUS_OP     shift, and go to state 72
    MULTI_OP     shift, and go to state 73
    DIVISION_OP  shift, and go to state 74
    PERCENT_OP   shift, and go to state 75

    COMP_BIGGER_OP        error (nonassociative)
    COMP_LESS_OP          error (nonassociative)
    COMP_BIGGER_EQUAL_OP  error (nonassociative)
    COMP_LESS_EQUAL_OP    error (nonassociative)

    $default  reduce using rule 24 (expr)


State 128

   16 expr: expr . PLUS_OP expr
   17     | expr . MINUS_OP expr
   18     | expr . MULTI_OP expr
   19     | expr . DIVISION_OP expr
   20     | expr . PERCENT_OP expr
   21     | expr . COMP_BIGGER_OP expr
   22     | expr . COMP_BIGGER_EQUAL_OP expr
   23     | expr . COMP_LESS_OP expr
   24     | expr . COMP_LESS_EQUAL_OP expr
   25     | expr . COMP_EQUAL_OP expr
   26     | expr . COMP_NOT_EQUAL_OP expr
   27     | expr . AND_ST expr
   28     | expr . OR_ST expr
   38 assignexpr: lvalue EQUAL_OP expr .

    AND_ST                shift, and go to state 69
    OR_ST                 shift, and go to state 70
    PLUS_OP               shift, and go to state 71
    MINUS_OP              shift, and go to state 72
    MULTI_OP              shift, and go to state 73
    DIVISION_OP           shift, and go to state 74
    PERCENT_OP            shift, and go to state 75
    COMP_EQUAL_OP         shift, and go to state 76
    COMP_NOT_EQUAL_OP     shift, and go to state 77
    COMP_BIGGER_OP        shift, and go to state 78
    COMP_LESS_OP          shift, and go to state 79
    COMP_BIGGER_EQUAL_OP  shift, and go to state 80
    COMP_LESS_EQUAL_OP    shift, and go to state 81

    $default  reduce using rule 38 (assignexpr)


State 129

   57 normcall: LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 148


State 130

   48 member: lvalue FULL_STOP ID .

    $default  reduce using rule 48 (member)


State 131

   58 methodcall: RANGE ID . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 149


State 132

   16 expr: expr . PLUS_OP expr
   17     | expr . MINUS_OP expr
   18     | expr . MULTI_OP expr
   19     | expr . DIVISION_OP expr
   20     | expr . PERCENT_OP expr
   21     | expr . COMP_BIGGER_OP expr
   22     | expr . COMP_BIGGER_EQUAL_OP expr
   23     | expr . COMP_LESS_OP expr
   24     | expr . COMP_LESS_EQUAL_OP expr
   25     | expr . COMP_EQUAL_OP expr
   26     | expr . COMP_NOT_EQUAL_OP expr
   27     | expr . AND_ST expr
   28     | expr . OR_ST expr
   49 member: lvalue LEFT_ARRAY expr . RIGHT_ARRAY

    AND_ST                shift, and go to state 69
    OR_ST                 shift, and go to state 70
    PLUS_OP               shift, and go to state 71
    MINUS_OP              shift, and go to state 72
    MULTI_OP              shift, and go to state 73
    DIVISION_OP           shift, and go to state 74
    PERCENT_OP            shift, and go to state 75
    COMP_EQUAL_OP         shift, and go to state 76
    COMP_NOT_EQUAL_OP     shift, and go to state 77
    COMP_BIGGER_OP        shift, and go to state 78
    COMP_LESS_OP          shift, and go to state 79
    COMP_BIGGER_EQUAL_OP  shift, and go to state 80
    COMP_LESS_EQUAL_OP    shift, and go to state 81
    RIGHT_ARRAY           shift, and go to state 150


State 133

   52 call: call LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 151


State 134

   50 member: call FULL_STOP ID .

    $default  reduce using rule 50 (member)


State 135

   16 expr: expr . PLUS_OP expr
   17     | expr . MINUS_OP expr
   18     | expr . MULTI_OP expr
   19     | expr . DIVISION_OP expr
   20     | expr . PERCENT_OP expr
   21     | expr . COMP_BIGGER_OP expr
   22     | expr . COMP_BIGGER_EQUAL_OP expr
   23     | expr . COMP_LESS_OP expr
   24     | expr . COMP_LESS_EQUAL_OP expr
   25     | expr . COMP_EQUAL_OP expr
   26     | expr . COMP_NOT_EQUAL_OP expr
   27     | expr . AND_ST expr
   28     | expr . OR_ST expr
   51 member: call LEFT_ARRAY expr . RIGHT_ARRAY

    AND_ST                shift, and go to state 69
    OR_ST                 shift, and go to state 70
    PLUS_OP               shift, and go to state 71
    MINUS_OP              shift, and go to state 72
    MULTI_OP              shift, and go to state 73
    DIVISION_OP           shift, and go to state 74
    PERCENT_OP            shift, and go to state 75
    COMP_EQUAL_OP         shift, and go to state 76
    COMP_NOT_EQUAL_OP     shift, and go to state 77
    COMP_BIGGER_OP        shift, and go to state 78
    COMP_LESS_OP          shift, and go to state 79
    COMP_BIGGER_EQUAL_OP  shift, and go to state 80
    COMP_LESS_EQUAL_OP    shift, and go to state 81
    RIGHT_ARRAY           shift, and go to state 152


State 136

   82 ifstmt: IF_ST LEFT_PARENTHESIS expr RIGHT_PARENTHESIS . stmt
   83       | IF_ST LEFT_PARENTHESIS expr RIGHT_PARENTHESIS . stmt ELSE_ST stmt

    IF_ST             shift, and go to state 4
    FOR_ST            shift, and go to state 5
    WHILE_ST          shift, and go to state 6
    NOT_ST            shift, and go to state 7
    LOCAL_ST          shift, and go to state 8
    CONTINUE_ST       shift, and go to state 9
    BREAK_ST          shift, and go to state 10
    TRUE_ST           shift, and go to state 11
    FALSE_ST          shift, and go to state 12
    NIL_ST            shift, and go to state 13
    FUNC_ST           shift, and go to state 14
    RETURN_ST         shift, and go to state 15
    MINUS_OP          shift, and go to state 16
    INCREMENT_OP      shift, and go to state 17
    DICREMENT_OP      shift, and go to state 18
    NUMBER            shift, and go to state 19
    STRING            shift, and go to state 20
    LEFT_CBRACKET     shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    SEMICOLON         shift, and go to state 23
    DOUBLE_COLON      shift, and go to state 24
    LEFT_ARRAY        shift, and go to state 25
    ID                shift, and go to state 26

    stmt        go to state 153
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifstmt      go to state 39
    whilestmt   go to state 40
    forstmt     go to state 41
    returnstmt  go to state 42


State 137

   85 forstmt: FOR_ST LEFT_PARENTHESIS elist SEMICOLON . expr SEMICOLON elist RIGHT_PARENTHESIS stmt

    NOT_ST            shift, and go to state 7
    LOCAL_ST          shift, and go to state 8
    TRUE_ST           shift, and go to state 11
    FALSE_ST          shift, and go to state 12
    NIL_ST            shift, and go to state 13
    MINUS_OP          shift, and go to state 16
    INCREMENT_OP      shift, and go to state 17
    DICREMENT_OP      shift, and go to state 18
    NUMBER            shift, and go to state 19
    STRING            shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    LEFT_ARRAY        shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 154
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 138

   84 whilestmt: WHILE_ST LEFT_PARENTHESIS expr RIGHT_PARENTHESIS . stmt

    IF_ST             shift, and go to state 4
    FOR_ST            shift, and go to state 5
    WHILE_ST          shift, and go to state 6
    NOT_ST            shift, and go to state 7
    LOCAL_ST          shift, and go to state 8
    CONTINUE_ST       shift, and go to state 9
    BREAK_ST          shift, and go to state 10
    TRUE_ST           shift, and go to state 11
    FALSE_ST          shift, and go to state 12
    NIL_ST            shift, and go to state 13
    FUNC_ST           shift, and go to state 14
    RETURN_ST         shift, and go to state 15
    MINUS_OP          shift, and go to state 16
    INCREMENT_OP      shift, and go to state 17
    DICREMENT_OP      shift, and go to state 18
    NUMBER            shift, and go to state 19
    STRING            shift, and go to state 20
    LEFT_CBRACKET     shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    SEMICOLON         shift, and go to state 23
    DOUBLE_COLON      shift, and go to state 24
    LEFT_ARRAY        shift, and go to state 25
    ID                shift, and go to state 26

    stmt        go to state 155
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifstmt      go to state 39
    whilestmt   go to state 40
    forstmt     go to state 41
    returnstmt  go to state 42


State 139

   80 IDS: COMMA . ID IDS

    ID  shift, and go to state 156


State 140

   78 idlist: ID IDS .

    $default  reduce using rule 78 (idlist)


State 141

   71 funcdef: FUNC_ST LEFT_PARENTHESIS idlist RIGHT_PARENTHESIS . block

    LEFT_CBRACKET  shift, and go to state 21

    block  go to state 157


State 142

   72 funcdef: FUNC_ST ID LEFT_PARENTHESIS idlist . RIGHT_PARENTHESIS block

    RIGHT_PARENTHESIS  shift, and go to state 158


State 143

   54 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 144


State 144

   54 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS

    NOT_ST            shift, and go to state 7
    LOCAL_ST          shift, and go to state 8
    TRUE_ST           shift, and go to state 11
    FALSE_ST          shift, and go to state 12
    NIL_ST            shift, and go to state 13
    MINUS_OP          shift, and go to state 16
    INCREMENT_OP      shift, and go to state 17
    DICREMENT_OP      shift, and go to state 18
    NUMBER            shift, and go to state 19
    STRING            shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    LEFT_ARRAY        shift, and go to state 25
    ID                shift, and go to state 26

    $default  reduce using rule 60 (elist)

    expr        go to state 65
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 159
    objectdef   go to state 35
    const       go to state 38


State 145

   68 indexedelem: LEFT_CBRACKET expr COLON . expr LEFT_CBRACKET

    NOT_ST            shift, and go to state 7
    LOCAL_ST          shift, and go to state 8
    TRUE_ST           shift, and go to state 11
    FALSE_ST          shift, and go to state 12
    NIL_ST            shift, and go to state 13
    MINUS_OP          shift, and go to state 16
    INCREMENT_OP      shift, and go to state 17
    DICREMENT_OP      shift, and go to state 18
    NUMBER            shift, and go to state 19
    STRING            shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    LEFT_ARRAY        shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 160
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 146

   16 expr: expr . PLUS_OP expr
   17     | expr . MINUS_OP expr
   18     | expr . MULTI_OP expr
   19     | expr . DIVISION_OP expr
   20     | expr . PERCENT_OP expr
   21     | expr . COMP_BIGGER_OP expr
   22     | expr . COMP_BIGGER_EQUAL_OP expr
   23     | expr . COMP_LESS_OP expr
   24     | expr . COMP_LESS_EQUAL_OP expr
   25     | expr . COMP_EQUAL_OP expr
   26     | expr . COMP_NOT_EQUAL_OP expr
   27     | expr . AND_ST expr
   28     | expr . OR_ST expr
   61 exprs: COMMA expr . exprs

    AND_ST                shift, and go to state 69
    OR_ST                 shift, and go to state 70
    PLUS_OP               shift, and go to state 71
    MINUS_OP              shift, and go to state 72
    MULTI_OP              shift, and go to state 73
    DIVISION_OP           shift, and go to state 74
    PERCENT_OP            shift, and go to state 75
    COMP_EQUAL_OP         shift, and go to state 76
    COMP_NOT_EQUAL_OP     shift, and go to state 77
    COMP_BIGGER_OP        shift, and go to state 78
    COMP_LESS_OP          shift, and go to state 79
    COMP_BIGGER_EQUAL_OP  shift, and go to state 80
    COMP_LESS_EQUAL_OP    shift, and go to state 81
    COMMA                 shift, and go to state 109

    $default  reduce using rule 62 (exprs)

    exprs  go to state 161


State 147

   66 indexedelems: COMMA indexedelem . indexedelems

    COMMA  shift, and go to state 113

    $default  reduce using rule 67 (indexedelems)

    indexedelems  go to state 162


State 148

   57 normcall: LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 57 (normcall)


State 149

   58 methodcall: RANGE ID LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS

    NOT_ST            shift, and go to state 7
    LOCAL_ST          shift, and go to state 8
    TRUE_ST           shift, and go to state 11
    FALSE_ST          shift, and go to state 12
    NIL_ST            shift, and go to state 13
    MINUS_OP          shift, and go to state 16
    INCREMENT_OP      shift, and go to state 17
    DICREMENT_OP      shift, and go to state 18
    NUMBER            shift, and go to state 19
    STRING            shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    LEFT_ARRAY        shift, and go to state 25
    ID                shift, and go to state 26

    $default  reduce using rule 60 (elist)

    expr        go to state 65
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 163
    objectdef   go to state 35
    const       go to state 38


State 150

   49 member: lvalue LEFT_ARRAY expr RIGHT_ARRAY .

    $default  reduce using rule 49 (member)


State 151

   52 call: call LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 52 (call)


State 152

   51 member: call LEFT_ARRAY expr RIGHT_ARRAY .

    $default  reduce using rule 51 (member)


State 153

   82 ifstmt: IF_ST LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt .
   83       | IF_ST LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt . ELSE_ST stmt

    ELSE_ST  shift, and go to state 164

    ELSE_ST   [reduce using rule 82 (ifstmt)]
    $default  reduce using rule 82 (ifstmt)


State 154

   16 expr: expr . PLUS_OP expr
   17     | expr . MINUS_OP expr
   18     | expr . MULTI_OP expr
   19     | expr . DIVISION_OP expr
   20     | expr . PERCENT_OP expr
   21     | expr . COMP_BIGGER_OP expr
   22     | expr . COMP_BIGGER_EQUAL_OP expr
   23     | expr . COMP_LESS_OP expr
   24     | expr . COMP_LESS_EQUAL_OP expr
   25     | expr . COMP_EQUAL_OP expr
   26     | expr . COMP_NOT_EQUAL_OP expr
   27     | expr . AND_ST expr
   28     | expr . OR_ST expr
   85 forstmt: FOR_ST LEFT_PARENTHESIS elist SEMICOLON expr . SEMICOLON elist RIGHT_PARENTHESIS stmt

    AND_ST                shift, and go to state 69
    OR_ST                 shift, and go to state 70
    PLUS_OP               shift, and go to state 71
    MINUS_OP              shift, and go to state 72
    MULTI_OP              shift, and go to state 73
    DIVISION_OP           shift, and go to state 74
    PERCENT_OP            shift, and go to state 75
    COMP_EQUAL_OP         shift, and go to state 76
    COMP_NOT_EQUAL_OP     shift, and go to state 77
    COMP_BIGGER_OP        shift, and go to state 78
    COMP_LESS_OP          shift, and go to state 79
    COMP_BIGGER_EQUAL_OP  shift, and go to state 80
    COMP_LESS_EQUAL_OP    shift, and go to state 81
    SEMICOLON             shift, and go to state 165


State 155

   84 whilestmt: WHILE_ST LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt .

    $default  reduce using rule 84 (whilestmt)


State 156

   80 IDS: COMMA ID . IDS

    COMMA  shift, and go to state 139

    $default  reduce using rule 81 (IDS)

    IDS  go to state 166


State 157

   71 funcdef: FUNC_ST LEFT_PARENTHESIS idlist RIGHT_PARENTHESIS block .

    $default  reduce using rule 71 (funcdef)


State 158

   72 funcdef: FUNC_ST ID LEFT_PARENTHESIS idlist RIGHT_PARENTHESIS . block

    LEFT_CBRACKET  shift, and go to state 21

    block  go to state 167


State 159

   54 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 168


State 160

   16 expr: expr . PLUS_OP expr
   17     | expr . MINUS_OP expr
   18     | expr . MULTI_OP expr
   19     | expr . DIVISION_OP expr
   20     | expr . PERCENT_OP expr
   21     | expr . COMP_BIGGER_OP expr
   22     | expr . COMP_BIGGER_EQUAL_OP expr
   23     | expr . COMP_LESS_OP expr
   24     | expr . COMP_LESS_EQUAL_OP expr
   25     | expr . COMP_EQUAL_OP expr
   26     | expr . COMP_NOT_EQUAL_OP expr
   27     | expr . AND_ST expr
   28     | expr . OR_ST expr
   68 indexedelem: LEFT_CBRACKET expr COLON expr . LEFT_CBRACKET

    AND_ST                shift, and go to state 69
    OR_ST                 shift, and go to state 70
    PLUS_OP               shift, and go to state 71
    MINUS_OP              shift, and go to state 72
    MULTI_OP              shift, and go to state 73
    DIVISION_OP           shift, and go to state 74
    PERCENT_OP            shift, and go to state 75
    COMP_EQUAL_OP         shift, and go to state 76
    COMP_NOT_EQUAL_OP     shift, and go to state 77
    COMP_BIGGER_OP        shift, and go to state 78
    COMP_LESS_OP          shift, and go to state 79
    COMP_BIGGER_EQUAL_OP  shift, and go to state 80
    COMP_LESS_EQUAL_OP    shift, and go to state 81
    LEFT_CBRACKET         shift, and go to state 169


State 161

   61 exprs: COMMA expr exprs .

    $default  reduce using rule 61 (exprs)


State 162

   66 indexedelems: COMMA indexedelem indexedelems .

    $default  reduce using rule 66 (indexedelems)


State 163

   58 methodcall: RANGE ID LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 170


State 164

   83 ifstmt: IF_ST LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt ELSE_ST . stmt

    IF_ST             shift, and go to state 4
    FOR_ST            shift, and go to state 5
    WHILE_ST          shift, and go to state 6
    NOT_ST            shift, and go to state 7
    LOCAL_ST          shift, and go to state 8
    CONTINUE_ST       shift, and go to state 9
    BREAK_ST          shift, and go to state 10
    TRUE_ST           shift, and go to state 11
    FALSE_ST          shift, and go to state 12
    NIL_ST            shift, and go to state 13
    FUNC_ST           shift, and go to state 14
    RETURN_ST         shift, and go to state 15
    MINUS_OP          shift, and go to state 16
    INCREMENT_OP      shift, and go to state 17
    DICREMENT_OP      shift, and go to state 18
    NUMBER            shift, and go to state 19
    STRING            shift, and go to state 20
    LEFT_CBRACKET     shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    SEMICOLON         shift, and go to state 23
    DOUBLE_COLON      shift, and go to state 24
    LEFT_ARRAY        shift, and go to state 25
    ID                shift, and go to state 26

    stmt        go to state 171
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifstmt      go to state 39
    whilestmt   go to state 40
    forstmt     go to state 41
    returnstmt  go to state 42


State 165

   85 forstmt: FOR_ST LEFT_PARENTHESIS elist SEMICOLON expr SEMICOLON . elist RIGHT_PARENTHESIS stmt

    NOT_ST            shift, and go to state 7
    LOCAL_ST          shift, and go to state 8
    TRUE_ST           shift, and go to state 11
    FALSE_ST          shift, and go to state 12
    NIL_ST            shift, and go to state 13
    MINUS_OP          shift, and go to state 16
    INCREMENT_OP      shift, and go to state 17
    DICREMENT_OP      shift, and go to state 18
    NUMBER            shift, and go to state 19
    STRING            shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    LEFT_ARRAY        shift, and go to state 25
    ID                shift, and go to state 26

    $default  reduce using rule 60 (elist)

    expr        go to state 65
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 172
    objectdef   go to state 35
    const       go to state 38


State 166

   80 IDS: COMMA ID IDS .

    $default  reduce using rule 80 (IDS)


State 167

   72 funcdef: FUNC_ST ID LEFT_PARENTHESIS idlist RIGHT_PARENTHESIS block .

    $default  reduce using rule 72 (funcdef)


State 168

   54 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 54 (call)


State 169

   68 indexedelem: LEFT_CBRACKET expr COLON expr LEFT_CBRACKET .

    $default  reduce using rule 68 (indexedelem)


State 170

   58 methodcall: RANGE ID LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 58 (methodcall)


State 171

   83 ifstmt: IF_ST LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt ELSE_ST stmt .

    $default  reduce using rule 83 (ifstmt)


State 172

   85 forstmt: FOR_ST LEFT_PARENTHESIS elist SEMICOLON expr SEMICOLON elist . RIGHT_PARENTHESIS stmt

    RIGHT_PARENTHESIS  shift, and go to state 173


State 173

   85 forstmt: FOR_ST LEFT_PARENTHESIS elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTHESIS . stmt

    IF_ST             shift, and go to state 4
    FOR_ST            shift, and go to state 5
    WHILE_ST          shift, and go to state 6
    NOT_ST            shift, and go to state 7
    LOCAL_ST          shift, and go to state 8
    CONTINUE_ST       shift, and go to state 9
    BREAK_ST          shift, and go to state 10
    TRUE_ST           shift, and go to state 11
    FALSE_ST          shift, and go to state 12
    NIL_ST            shift, and go to state 13
    FUNC_ST           shift, and go to state 14
    RETURN_ST         shift, and go to state 15
    MINUS_OP          shift, and go to state 16
    INCREMENT_OP      shift, and go to state 17
    DICREMENT_OP      shift, and go to state 18
    NUMBER            shift, and go to state 19
    STRING            shift, and go to state 20
    LEFT_CBRACKET     shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    SEMICOLON         shift, and go to state 23
    DOUBLE_COLON      shift, and go to state 24
    LEFT_ARRAY        shift, and go to state 25
    ID                shift, and go to state 26

    stmt        go to state 174
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifstmt      go to state 39
    whilestmt   go to state 40
    forstmt     go to state 41
    returnstmt  go to state 42


State 174

   85 forstmt: FOR_ST LEFT_PARENTHESIS elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTHESIS stmt .

    $default  reduce using rule 85 (forstmt)
